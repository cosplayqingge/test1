{"remainingRequest":"D:\\test1\\msshoop\\home\\node_modules\\babel-loader\\lib\\index.js!D:\\test1\\msshoop\\home\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\test1\\msshoop\\home\\src\\api\\index.js","dependencies":[{"path":"D:\\test1\\msshoop\\home\\src\\api\\index.js","mtime":1557994017783},{"path":"D:\\test1\\msshoop\\home\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\test1\\msshoop\\home\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\test1\\msshoop\\home\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from 'axios';\nvar SERVER = 'http://127.0.0.1:3000';\nexport var getHomeProducts = function getHomeProducts() {\n  return axios({\n    url: SERVER + \"/products/homeProducts\"\n  }).then(function (result) {\n    console.log(result);\n\n    if (result.data.code == 0) {\n      return result.data.data;\n    } else {\n      throw 'no data';\n    }\n  }).catch(function (err) {\n    console.log(err);\n  });\n};",{"version":3,"sources":["D:\\test1\\msshoop\\home\\src\\api\\index.js"],"names":["axios","SERVER","getHomeProducts","url","then","result","console","log","data","code","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,MAAM,GAAG,uBAAf;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAI;AAClC,SAAOF,KAAK,CAAC;AACZG,IAAAA,GAAG,EAACF,MAAM,GAAC;AADC,GAAD,CAAL,CAGNG,IAHM,CAGD,UAAAC,MAAM,EAAE;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,QAAGA,MAAM,CAACG,IAAP,CAAYC,IAAZ,IAAoB,CAAvB,EAAyB;AACxB,aAAOJ,MAAM,CAACG,IAAP,CAAYA,IAAnB;AACA,KAFD,MAEK;AACJ,YAAM,SAAN;AACA;AACD,GAVM,EAWNE,KAXM,CAWA,UAAAC,GAAG,EAAE;AACXL,IAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACA,GAbM,CAAP;AAcA,CAfM","sourcesContent":["import axios from 'axios';\r\n\r\nconst SERVER = 'http://127.0.0.1:3000'\r\n\r\nexport const getHomeProducts = ()=>{\r\n\treturn axios({\r\n\t\turl:SERVER+\"/products/homeProducts\"\r\n\t})\r\n\t.then(result=>{\r\n\t\tconsole.log(result)\r\n\t\tif(result.data.code == 0){\r\n\t\t\treturn result.data.data\r\n\t\t}else{\r\n\t\t\tthrow 'no data'\r\n\t\t}\r\n\t})\r\n\t.catch(err=>{\r\n\t\tconsole.log(err)\r\n\t})\r\n}"]}]}